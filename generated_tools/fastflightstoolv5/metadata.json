{
  "name": "FastFlightsToolV5",
  "description": "A Python package for scraping Google Flights data using Base64-encoded Protobuf strings.",
  "version": "1.0.0",
  "api_info": {
    "api_name": "Fast Flights",
    "base_url": null,
    "authentication": {
      "type": "none",
      "description": "No authentication required."
    },
    "response_format": {
      "type": "object",
      "class_name": "Result",
      "structure": {
        "flight_information": {
          "type": "object",
          "description": "Contains detailed flight information."
        },
        "prices": {
          "type": "object",
          "description": "Contains price details for the flights."
        },
        "availability": {
          "type": "object",
          "description": "Contains availability details for the flights."
        }
      },
      "example": {
        "flight_information": {
          "flight_number": "sample",
          "departure_time": "sample",
          "arrival_time": "sample"
        },
        "prices": {
          "base_price": "sample",
          "taxes": "sample"
        },
        "availability": {
          "seats_available": "sample"
        }
      }
    },
    "endpoints": []
  },
  "parsing_info": {
    "method": "llm",
    "confidence_score": 0.95,
    "llm_provider": "perplexity",
    "llm_enhanced": true
  },
  "generated_at": "2025-05-29T02:04:00.857444",
  "files": {
    "tool": "tool.py",
    "wrapper": "wrapper.py",
    "metadata": "metadata.json"
  },
  "mcp_schema": {
    "input_schema": {
      "flight_data": {
        "type": "array",
        "description": "A list of FlightData objects containing flight details.",
        "required": true,
        "class_structure": {
          "date": "string - Flight date in YYYY-MM-DD format (e.g., '2025-01-01')",
          "from_airport": "string - 3-letter departure airport code (e.g., 'TPE')",
          "to_airport": "string - 3-letter arrival airport code (e.g., 'MYJ')"
        },
        "example": "[FlightData(date='2025-01-01', from_airport='TPE', to_airport='MYJ')]"
      },
      "trip": {
        "type": "string",
        "description": "Type of trip.",
        "required": true,
        "enum": [
          "one-way",
          "round-trip"
        ],
        "example": "one-way"
      },
      "seat": {
        "type": "string",
        "description": "Seat class.",
        "required": true,
        "enum": [
          "economy",
          "premium-economy",
          "business",
          "first"
        ],
        "example": "economy"
      },
      "passengers": {
        "type": "object",
        "description": "Passengers object containing details about the passengers.",
        "required": true,
        "class_structure": {
          "adults": "integer - Number of adult passengers",
          "children": "integer - Number of child passengers",
          "infants_in_seat": "integer - Number of infants with seats",
          "infants_on_lap": "integer - Number of lap infants"
        },
        "example": "Passengers(adults=2, children=1, infants_in_seat=0, infants_on_lap=0)"
      },
      "fetch_mode": {
        "type": "string",
        "description": "Data fetching method.",
        "required": false,
        "enum": [
          "common",
          "fallback",
          "force-fallback"
        ],
        "default": "common",
        "example": "fallback"
      }
    },
    "output_schema": {
      "type": "object",
      "properties": {
        "flights": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "field_mapping": {
      "flights": "flights"
    }
  },
  "input_sources": {
    "api_documentation_provided": true,
    "documentation_length": 1771
  }
}