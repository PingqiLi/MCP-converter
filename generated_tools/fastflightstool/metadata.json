{
  "name": "FastFlightsTool",
  "description": "An API for scraping Google Flights data using Base64-encoded Protobuf strings. It provides structured flight information, prices, and availability without requiring an API key.",
  "version": "1.0.0",
  "api_info": {
    "api_name": "Fast Flights API",
    "base_url": "Not applicable (local Python package)",
    "authentication": {
      "type": "none",
      "location": null,
      "parameter_name": null,
      "scheme": null,
      "description": "No authentication is required to use this API."
    },
    "response_format": {
      "type": "json",
      "content_type": "application/json",
      "structure": "A Result object containing flight information, prices, and availability.",
      "example": {
        "flight_info": {
          "flight_number": "example_number",
          "departure_time": "example_time",
          "arrival_time": "example_time",
          "price": 100.0,
          "availability": true
        }
      }
    },
    "endpoints": [
      {
        "path": "Not applicable (local function)",
        "method": "Not applicable (local function)",
        "description": "The get_flights function is used to retrieve flight data based on the provided parameters.",
        "summary": "Retrieve flight data from Google Flights"
      }
    ]
  },
  "parsing_info": {
    "method": "llm",
    "confidence_score": 0.95,
    "llm_provider": "perplexity",
    "llm_enhanced": true
  },
  "generated_at": "2025-05-29T01:35:58.044798",
  "files": {
    "tool": "tool.py",
    "wrapper": "wrapper.py",
    "metadata": "metadata.json"
  },
  "mcp_schema": {
    "input_schema": {
      "flight_data": {
        "type": "array",
        "description": "A list of FlightData objects containing flight details.",
        "required": true,
        "default": null,
        "enum": null,
        "pattern": null,
        "minimum": null,
        "maximum": null,
        "example": [
          {
            "date": "2025-01-01",
            "from_airport": "TPE",
            "to_airport": "MYJ"
          }
        ]
      },
      "trip": {
        "type": "string",
        "description": "The type of trip. Can be 'one-way' or 'round-trip'.",
        "required": true,
        "default": null,
        "enum": [
          "one-way",
          "round-trip"
        ],
        "pattern": null,
        "minimum": null,
        "maximum": null,
        "example": "one-way"
      },
      "seat": {
        "type": "string",
        "description": "The class of seat. Can be 'economy', 'premium-economy', 'business', or 'first'.",
        "required": true,
        "default": null,
        "enum": [
          "economy",
          "premium-economy",
          "business",
          "first"
        ],
        "pattern": null,
        "minimum": null,
        "maximum": null,
        "example": "economy"
      },
      "passengers": {
        "type": "object",
        "description": "An object containing the number of passengers.",
        "required": true,
        "default": null,
        "enum": null,
        "pattern": null,
        "minimum": null,
        "maximum": null,
        "example": {
          "adults": 2,
          "children": 1,
          "infants_in_seat": 0,
          "infants_on_lap": 0
        }
      },
      "fetch_mode": {
        "type": "string",
        "description": "The data fetching method. Can be 'common', 'fallback', or 'force-fallback'.",
        "required": false,
        "default": "common",
        "enum": [
          "common",
          "fallback",
          "force-fallback"
        ],
        "pattern": null,
        "minimum": null,
        "maximum": null,
        "example": "fallback"
      }
    },
    "output_schema": {
      "type": "object",
      "properties": {
        "flights": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "field_mapping": {
      "flights": "flights"
    }
  },
  "input_sources": {
    "api_documentation_provided": true,
    "documentation_length": 1771
  }
}